// This file was generated with the Protobuf generator tool.
// Dataset ID    : 1504
// Dataset Name  : steel-plates-fault;
// Dataset URL   : https://www.openml.org/data/v1/download/1592296/steel-plates-fault.arff
// Num. Columns  : 34
// Num. Rows     : 1941
// Target Feature: Class

// Beginning of Description of Dataset:
// **Author**: Semeion, Research Center of Sciences of Communication, Rome, Italy.     
// **Source**: [UCI](http://archive.ics.uci.edu/ml/datasets/steel+plates+faults)     
// **Please cite**: Dataset provided by Semeion, Research Center of Sciences of Communication, Via Sersale 117, 00128, Rome, Italy.  
// **Steel Plates Faults Data Set**  
// A dataset of steel plates' faults, classified into 7 different types. The goal was to train machine learning for automatic pattern recognition.
// The dataset consists of 27 features describing each fault (location, size, ...) and 7 binary features indicating the type of fault (on of 7: Pastry, Z_Scratch, K_Scatch, Stains, Dirtiness, Bumps, Other_Faults). The latter is commonly used as a binary classification target ('common' or 'other' fault.)
// ### Attribute Inf
//

syntax = "proto3";

message Empty {
}

message Features {
	double   V1                             = 1;
	double   V2                             = 2;
	double   V3                             = 3;
	double   V4                             = 4;
	double   V5                             = 5;
	double   V6                             = 6;
	double   V7                             = 7;
	double   V8                             = 8;
	uint32   V9                             = 9;
	uint32   V10                            = 10;
	double   V11                            = 11;
	uint32   V12                            = 12;
	uint32   V13                            = 13;
	double   V14                            = 14;
	double   V15                            = 15;
	double   V16                            = 16;
	double   V17                            = 17;
	double   V18                            = 18;
	double   V19                            = 19;
	double   V20                            = 20;
	double   V21                            = 21;
	double   V22                            = 22;
	double   V23                            = 23;
	double   V24                            = 24;
	double   V25                            = 25;
	double   V26                            = 26;
	double   V27                            = 27;
	uint32   V28                            = 28;
	uint32   V29                            = 29;
	uint32   V30                            = 30;
	uint32   V31                            = 31;
	uint32   V32                            = 32;
	uint32   V33                            = 33;
	string   Class                          = 34;
}

service get_next_row {
	 rpc get_next_row(Empty) returns(Features);
}

/*
//This code section can be directly used
//at the end of gen_next_row in the server.py file
//for OpenML dataset nr. 1504
        response.V1                             = row[0]
        response.V2                             = row[1]
        response.V3                             = row[2]
        response.V4                             = row[3]
        response.V5                             = row[4]
        response.V6                             = row[5]
        response.V7                             = row[6]
        response.V8                             = row[7]
        response.V9                             = numpy.uint32(row[8])
        response.V10                            = numpy.uint32(row[9])
        response.V11                            = row[10]
        response.V12                            = numpy.uint32(row[11])
        response.V13                            = numpy.uint32(row[12])
        response.V14                            = row[13]
        response.V15                            = row[14]
        response.V16                            = row[15]
        response.V17                            = row[16]
        response.V18                            = row[17]
        response.V19                            = row[18]
        response.V20                            = row[19]
        response.V21                            = row[20]
        response.V22                            = row[21]
        response.V23                            = row[22]
        response.V24                            = row[23]
        response.V25                            = row[24]
        response.V26                            = row[25]
        response.V27                            = row[26]
        response.V28                            = numpy.uint32(row[27])
        response.V29                            = numpy.uint32(row[28])
        response.V30                            = numpy.uint32(row[29])
        response.V31                            = numpy.uint32(row[30])
        response.V32                            = numpy.uint32(row[31])
        response.V33                            = numpy.uint32(row[32])
        response.Class                          = row[33]
*/

